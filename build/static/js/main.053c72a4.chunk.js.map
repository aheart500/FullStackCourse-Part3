{"version":3,"sources":["Services/Persons.js","Components/Person.js","Components/Notifaction.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","delete","put","Person","details","deleteMe","name","number","onClick","Notifaction","message","className","status","App","useState","newName","setNewName","newNumber","setNewNumber","search","setSearch","persons","setPersons","errorMessage","setErrorMessage","useEffect","PersonsServices","savedPersons","window","confirm","catch","setTimeout","filter","person","htmlFor","type","value","onChange","event","target","onSubmit","preventDefault","newOne","find","updatedPerson","map","newSaved","concat","error","console","log","RegExp","personsToShow","match","key","showPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.053c72a4.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\n\nconst getPersons = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst addPerson = newPerson => {\n    const request = axios.post(baseUrl,newPerson)\n    return request.then(response => response.data)\n}\n\n\nconst deletePerson = id =>  axios.delete(`${baseUrl}/${id}`)\n\nconst updatePerson = (id,newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`,newPerson)\n    return request.then(response => response.data)\n}\n\n\nexport default {getPersons,addPerson,deletePerson,updatePerson}","import React from 'react'\nconst Person = ({details,deleteMe}) =>{\n    const {id,name,number} = details\n    return (\n        <li>\n            {`${name} : ${number}`} <button onClick={() => deleteMe(id,name)}>Delete</button>\n        </li>\n    )\n}\nexport default Person;","import React from 'react'\n\nconst Notifaction = ({message}) => {\n    if (message === null){\n        return null\n    }\n    return (\n        <div className={message.status === 'success' ? 'error-box' : 'error-box failure'}>\n            {message.message}\n        </div>\n    )\n}\n\nexport default Notifaction\n","import React, {useState,useEffect} from 'react';\nimport PersonsServices from './Services/Persons'\nimport Person from './Components/Person';\nimport Notifaction from './Components/Notifaction'\nconst App = ()=>{\n\n  const [newName,setNewName] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [search,setSearch] = useState('')\n  const [persons,setPersons] = useState([])\n  const [errorMessage,setErrorMessage] = useState(null)\n\n  const ms = 3000\n\n  useEffect(()=> {\n    PersonsServices.getPersons().then(savedPersons => setPersons(savedPersons))\n  },[])\n  \n  const deleteMe = (id,name) => {\n    if(window.confirm(`Are you sure you want to delete ${name} from the contacts ?`)){\n      PersonsServices.deletePerson(id).catch(() => {\n        setErrorMessage({message : `${name} is already deleted from the server` , status:'failure'})\n        setTimeout(()=> {setErrorMessage(null)},ms)\n      })\n\n      setPersons(persons.filter(person=> person.id !== id))\n      setErrorMessage({message: 'Deleted Successfully!',status:'success' })\n      setTimeout(()=> {setErrorMessage(null)},ms)\n\n    }\n\n}\n\n\nconst showPersons = () =>{\n  const filter = new RegExp(search,'gi')\n  let personsToShow = filter === '' ? [...persons] : persons.filter(person => person.name.match(filter))\n  personsToShow = personsToShow.map(person => <Person key={person.id} details={person} deleteMe={deleteMe} />)\n  return <ul>{personsToShow}</ul>\n}\n\n\nconst saveNew = (event) => {\n  event.preventDefault()\n  const newOne = persons.find(person => person.name === newName)\n  if (typeof newOne !== 'undefined'){\n    if(window.confirm(`${newName} already exists in the list. Do you wanna replace the old number with the new ?`)){\n     PersonsServices.updatePerson(newOne.id,{...newOne,number : newNumber})\n      .then(updatedPerson => setPersons(persons.map(person => person.id === newOne.id ? updatedPerson : person)))\n        .then(()=> {\n          setErrorMessage({message:`${newOne.name} was updated successfully`,status:'success'})\n          \n        })\n          .catch(() =>{ \n            setErrorMessage({message:'There was an error please try again',status:'failure'})\n          }).then(()=> setTimeout(()=> {setErrorMessage(null)},ms))\n     \n    }\n  }else{\n  const newPerson = {name : newName, number : newNumber}\n  PersonsServices.addPerson(newPerson).then(newSaved => setPersons(persons.concat(newSaved)))\n    .then(()=> {\n      setErrorMessage({message:`${newPerson.name} was added successfully`,status:'success'})\n    })\n      .catch((error)=> { \n        setErrorMessage({message: error.response.data.error ,status:'failure'}) \n        console.log(error.response.data.error)\n        \n      }).then(()=> {\n        setNewName('')\n        setNewNumber('')\n        setTimeout(()=> {setErrorMessage(null)},ms)\n      })\n  }\n}\n\n\n\n\n  return (\n    <div>\n      <Notifaction message={errorMessage}  />\n      <div>\n        <h2>Search Contancts : </h2>\n        <label htmlFor='search'>Write the name to look for : </label>\n        <input type='text' id='search' value={search} onChange={(event)=> setSearch(event.target.value)} />\n      </div>\n      <div>\n        <form onSubmit={saveNew}>\n        <h2>Add New : </h2>\n        <label htmlFor='newName'>Write the name of the new number : </label>\n        <input type='text' id='newName' value={newName} onChange={(event)=> setNewName(event.target.value)}/>\n        <br />\n        <label htmlFor='newNumber'>Write the number : </label>\n        <input type='text' id='newNumber' value={newNumber} onChange={(event)=> setNewNumber(event.target.value)} />\n        <br />\n        <button type=\"submit\">Save New </button>\n        </form>\n      </div>\n      <div>\n        <h2>Contancts : </h2>\n        {showPersons()}\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}